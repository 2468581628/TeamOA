{
  "AppConfig": {
    "AppName": "NetCoreWebapi"
  },
  "ConnectionStrings": {
    "MainConnection": "User Id=OA;Password=admin;Data Source=127.0.0.1:1521/xe;"
  },
  "SqlTemplate": {
    "LoginSqlTemplate": {
      "GetUserInfo": "SELECT ID,USERNAME,ACCOUNT FROM USER_TABLE where ACCOUNT=:ACCOUNT and PASSWORD=:PASSWORD and status=1"
    },
    "MemberSqlTemplate": {
      "GetMemberData": "SELECT ID,USERNAME,ACCOUNT,TEL,STATUS FROM USER_TABLE where id<>1",
      "InsMemberData": "INSERT INTO user_table(ID,USERNAME,PASSWORD,ACCOUNT,TEL,STATUS) VALUES(user_table_id_seq.nextval,:USERNAME,:PASSWORD,:ACCOUNT,:TEL,:STATUS)",
      "UpdMemberData": "UPDATE USER_TABLE SET USERNAME=:USERNAME,TEL=:TEL WHERE ID=:ID",
      "UpdPassword": "UPDATE USER_TABLE SET PASSWORD=:PASSWORD WHERE ID=:ID",
      "UpdStatus": "UPDATE USER_TABLE SET STATUS=:STATUS WHERE ID=:ID"
    },
    "LeaveSqlTemplate": {
      "GetLeaveData": "select l.L_ID as ID,l.S_DATE StartTime,l.E_DATE EndTime,l.TYPE,l.Status,l.remark,ut.id,ut.username as username from leave l inner join user_table ut on l.user_id=ut.id where l.USER_ID=:USER_ID",
      "AddLeaveData": "insert into leave(S_DATE,E_DATE,USER_ID,TYPE,REMARK,status) values (:S_DATE,:E_DATE,:USER_ID,:TYPE,:RAMARK,:Status)"
    },
    "CostSqlTemplate": {
      "AddCostData": "INSERT INTO cost (USER_ID,COSTTYPE,COSTCOUNT,FILENAME,NEWFILENAME,DATETIME,STATUS) values (:USER_ID,:COSTTYPE,:COSTCOUNT,:FILENAME,:NEWFILENAME,:DATETIME,:STATUS)",
      "GetCostData": "select c.USER_ID,c.COSTTYPE,c.COSTCOUNT,c.FILENAME,c.NEWFILENAME,c.DATETIME,c.STATUS,c.ID,ut.username from cost c inner join user_table ut on c.USER_ID=ut.id where c.USER_ID=:USER_ID"
    },
    "OvertimeSqlTemplate": {
      "AddOvertime": "INSERT INTO overtime (STARTTTIME,ENDTIME,INPUTVALUE,USERID,DATETIME,STATUS) VALUES (:STARTTTIME,:ENDTIME,:INPUTVALUE,:USERID,sysdate,:STATUS)",
      "GetOvertime": "select * from overtime where USERID=:USERID"
    },
    "ArticlewagesSqlTemplate": {
      "AddArticlewages": "INSERT INTO ARTICLEWAGES (USERID,UserName,YearMonth,AllMoney,Insurance,AccumulationFund,PRACTICALMONEY) VALUES (:USERID,:UserName,:YearMonth,:AllMoney,:Insurance,:AccumulationFund,:PRACTICALMONEY)",
      "GetInfo": "select * from ARTICLEWAGES where USERID=:USERID",
      "GetInfoAdmin": "select * from ARTICLEWAGES"
    },
    "CheckSqlTemplate": {
      "GetLeave": "SELECT L.L_ID AS ID,U.USERNAME AS UserName,l.s_date AS StartTime,l.e_date AS EndTime,l.type AS Type,l.status AS Status FROM LEAVE L LEFT JOIN USER_TABLE U ON l.user_id=u.id",
      "UpdateLeave": "update leave set status=:status where L_ID=:ID",
      "GetOvertime": "SELECT O.ID AS ID,U.USERNAME AS UserName,O.STARTTIME AS StartTime,O.ENDTIME AS EndTime,O.DATETIME AS DateTime, O.INPUTVALUE AS InputValue,O.STATUS AS Status  FROM OVERTIME O LEFT JOIN USER_TABLE U ON O.USERID=U.ID",
      "UpdateOvertime": "update OVERTIME set status=:status where ID=:ID",
      "GetCost": "SELECT C.ID AS Id,U.USERNAME AS UserName,C.DATETIME AS DateTime,C.COSTCOUNT AS CostCount,C.COSTTYPE AS Type,C.STATUS AS Status FROM COST C LEFT JOIN USER_TABLE U ON C.USER_ID=U.ID",
      "UpdateCost": "update cost set status=:status where ID=:ID"
    }
  },
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  "AllowedHosts": "*",
  "AppSettings": {
    "Secret": "THIS IS USED TO SIGN AND VERIFY JWT TOKENS, REPLACE IT WITH YOUR OWN SECRET, IT CAN BE ANY STRING"
  }
}
